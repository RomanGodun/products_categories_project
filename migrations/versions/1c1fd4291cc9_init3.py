"""init3

Revision ID: 1c1fd4291cc9
Revises: 082c79c67211
Create Date: 2023-06-01 13:16:31.085768

"""
from alembic import op

# revision identifiers, used by Alembic.
revision = "1c1fd4291cc9"
down_revision = "082c79c67211"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS buisiness_entities")
    op.drop_constraint(
        "product_to_category_category_id_fkey", "product_to_category", schema="buisiness_entities", type_="foreignkey"
    )
    op.drop_constraint(
        "product_to_category_product_id_fkey", "product_to_category", schema="buisiness_entities", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "product_to_category",
        "product",
        ["product_id"],
        ["id"],
        source_schema="buisiness_entities",
        referent_schema="buisiness_entities",
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "product_to_category",
        "category",
        ["category_id"],
        ["id"],
        source_schema="buisiness_entities",
        referent_schema="buisiness_entities",
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "product_to_category", schema="buisiness_entities", type_="foreignkey")
    op.drop_constraint(None, "product_to_category", schema="buisiness_entities", type_="foreignkey")
    op.create_foreign_key(
        "product_to_category_product_id_fkey",
        "product_to_category",
        "product",
        ["product_id"],
        ["id"],
        source_schema="buisiness_entities",
        referent_schema="buisiness_entities",
    )
    op.create_foreign_key(
        "product_to_category_category_id_fkey",
        "product_to_category",
        "category",
        ["category_id"],
        ["id"],
        source_schema="buisiness_entities",
        referent_schema="buisiness_entities",
    )
    op.execute("DROP SCHEMA IF EXISTS buisiness_entities RESTRICT")
    # ### end Alembic commands ###
